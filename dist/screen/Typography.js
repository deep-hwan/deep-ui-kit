var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { css } from "@emotion/css";
export function Title(props) {
    var as = props.as, children = props.children, fontSize = props.fontSize, color = props.color, w = props.w;
    return (_jsxs(_Fragment, { children: [as === "h1" && (_jsx("h1", __assign({ className: css(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n            margin: 0;\n            font-size: ", ";\n            color: ", ";\n            font-weight: ", ";\n            transition: 0.3s ease-in-out;\n          "], ["\n            margin: 0;\n            font-size: ", ";\n            color: ", ";\n            font-weight: ", ";\n            transition: 0.3s ease-in-out;\n          "])), fontSize ? fontSize : "3.375rem", color ? color : "#333", w ? w : "bold") }, { children: children }))), as === "h2" && (_jsx("h2", __assign({ className: css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n            margin: 0;\n            font-size: ", ";\n            color: ", ";\n            font-weight: ", ";\n            transition: 0.3s ease-in-out;\n          "], ["\n            margin: 0;\n            font-size: ", ";\n            color: ", ";\n            font-weight: ", ";\n            transition: 0.3s ease-in-out;\n          "])), fontSize ? fontSize : "3rem", color ? color : "#333", w ? w : "bold") }, { children: children }))), as === "h3" && (_jsx("h3", __assign({ className: css(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n            margin: 0;\n            font-size: ", ";\n            color: ", ";\n            font-weight: ", ";\n            transition: 0.3s ease-in-out;\n          "], ["\n            margin: 0;\n            font-size: ", ";\n            color: ", ";\n            font-weight: ", ";\n            transition: 0.3s ease-in-out;\n          "])), fontSize ? fontSize : "2.625rem", color ? color : "#333", w ? w : "bold") }, { children: children }))), as === "h4" && (_jsx("h4", __assign({ className: css(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n            margin: 0;\n            font-size: ", ";\n            color: ", ";\n            font-weight: ", ";\n            transition: 0.3s ease-in-out;\n          "], ["\n            margin: 0;\n            font-size: ", ";\n            color: ", ";\n            font-weight: ", ";\n            transition: 0.3s ease-in-out;\n          "])), fontSize ? fontSize : "2.25rem", color ? color : "#333", w ? w : "bold") }, { children: children }))), as === "h5" && (_jsx("h5", __assign({ className: css(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n            margin: 0;\n            font-size: ", ";\n            color: ", ";\n            font-weight: ", ";\n            transition: 0.3s ease-in-out;\n          "], ["\n            margin: 0;\n            font-size: ", ";\n            color: ", ";\n            font-weight: ", ";\n            transition: 0.3s ease-in-out;\n          "])), fontSize ? fontSize : "1.875rem", color ? color : "#333", w ? w : "bold") }, { children: children }))), as === "h6" && (_jsx("h6", __assign({ className: css(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n            margin: 0;\n            font-size: ", ";\n            color: ", ";\n            font-weight: ", ";\n            transition: 0.3s ease-in-out;\n          "], ["\n            margin: 0;\n            font-size: ", ";\n            color: ", ";\n            font-weight: ", ";\n            transition: 0.3s ease-in-out;\n          "])), fontSize ? fontSize : "1.75rem", color ? color : "#333", w ? w : "bold") }, { children: children }))), as === "strong" && (_jsx("strong", __assign({ className: css(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n            margin: 0;\n            font-size: ", ";\n            color: ", ";\n            font-weight: ", ";\n            transition: 0.3s ease-in-out;\n          "], ["\n            margin: 0;\n            font-size: ", ";\n            color: ", ";\n            font-weight: ", ";\n            transition: 0.3s ease-in-out;\n          "])), fontSize ? fontSize : "1.625rem", color ? color : "#333", w ? w : "bold") }, { children: children }))), !as && (_jsx("strong", __assign({ className: css(templateObject_8 || (templateObject_8 = __makeTemplateObject(["\n            margin: 0;\n            font-size: ", ";\n            color: ", ";\n            font-weight: ", ";\n            transition: 0.3s ease-in-out;\n          "], ["\n            margin: 0;\n            font-size: ", ";\n            color: ", ";\n            font-weight: ", ";\n            transition: 0.3s ease-in-out;\n          "])), fontSize ? fontSize : "1.625rem", color ? color : "#333", w ? w : "bold") }, { children: children })))] }));
}
export function Text(props) {
    var children = props.children, fontSize = props.fontSize, color = props.color, w = props.w;
    return (_jsx(_Fragment, { children: _jsx("p", __assign({ className: css(templateObject_9 || (templateObject_9 = __makeTemplateObject(["\n          margin: 0;\n          font-size: ", ";\n          color: ", ";\n          font-weight: ", ";\n          transition: 0.3s ease-in-out;\n          white-space: pre-line;\n        "], ["\n          margin: 0;\n          font-size: ", ";\n          color: ", ";\n          font-weight: ", ";\n          transition: 0.3s ease-in-out;\n          white-space: pre-line;\n        "])), fontSize ? fontSize : "0.938rem", color ? color : "#333", w ? w : "normal") }, { children: children })) }));
}
export function TextSpan(props) {
    var children = props.children, fontSize = props.fontSize, color = props.color, w = props.w;
    return (_jsx("span", __assign({ className: css(templateObject_10 || (templateObject_10 = __makeTemplateObject(["\n        margin: 0;\n        font-size: ", ";\n        color: ", ";\n        font-weight: ", ";\n        transition: 0.3s ease-in-out;\n        white-space: pre-line;\n      "], ["\n        margin: 0;\n        font-size: ", ";\n        color: ", ";\n        font-weight: ", ";\n        transition: 0.3s ease-in-out;\n        white-space: pre-line;\n      "])), fontSize ? fontSize : "0.813rem", color ? color : "#797979", w ? w : "normal") }, { children: children })));
}
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7, templateObject_8, templateObject_9, templateObject_10;
